<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="bitc.fullstack503.ordernetserver.mapper.HQStatusMapper">

    <!-- HQ 물류센터 부품 현황 조회 -->
    <select id="selectHQStatus" resultType="bitc.fullstack503.ordernetserver.dto.HQStatusDTO">

        SELECT
            p.part_id,
            w.warehouse_id,
            w.warehouse_name,
            p.part_name,
            p.part_cate,
            ws.stock_quantity
        FROM warehouse_stock ws
                 JOIN parts p ON ws.part_id = p.part_id
                 JOIN warehouse w ON ws.warehouse_id = w.warehouse_id
    </select>


    <!-- 입고 요청 처리 -->
    <insert id="insertHQRequest" parameterType="bitc.fullstack503.ordernetserver.dto.HQRequestDTO">
        INSERT INTO warehouse_inbound (warehouse_id,part_id,inbound_quantity,inbound_date,inbound_price)
        VALUES (#{warehouseId},#{partId},#{inboundQuantity},NOW(),#{inboundPrice})
    </insert>

    <!-- 물류센터 목록 가져오기 -->
    <select id="selectWarehouses" resultType="bitc.fullstack503.ordernetserver.dto.HQStatusDTO">
        SELECT warehouse_id, warehouse_name, warehouse_cate
        FROM warehouse
    </select>

    <!-- 물류센터에 해당하는 부품 목록 가져오기 -->
    <select id="selectPartsByWarehouse" resultType="bitc.fullstack503.ordernetserver.dto.HQStatusDTO">
        SELECT p.part_id, p.part_name, p.part_price
        FROM warehouse_stock ws
                 JOIN parts p ON ws.part_id = p.part_id
        WHERE ws.warehouse_id = #{warehouseId}
    </select>


    <!-- 물류센터 카테고리 조회 -->
    <select id="selectWHCate" resultType="String">
        SELECT DISTINCT warehouse_cate
        FROM warehouse
        WHERE warehouse_name = #{warehouseName}
    </select>

    <!-- 부품 카테고리 조회 -->
    <select id="selectPartCate" resultType="String">
        SELECT DISTINCT pa.part_cate AS partCate, pa.part_id AS partId
        FROM warehouse_stock AS ws
                 INNER JOIN parts AS pa ON ws.part_id = pa.part_id
        WHERE ws.warehouse_id = #{warehouseId}
    </select>

    <!--    신규 부품 등록 -->
    <insert id="insertPart" parameterType="bitc.fullstack503.ordernetserver.dto.HQStatusDTO">
        INSERT INTO parts (part_id, part_name, part_cate, part_img, part_price)
        VALUES (#{partId}, #{partName}, #{partCate}, #{partImg}, #{partPrice})
    </insert>
    <insert id="insertWarehouseStock" parameterType="bitc.fullstack503.ordernetserver.dto.HQStatusDTO">
        INSERT INTO warehouse_stock (warehouse_id, part_id, stock_quantity)
        VALUES (#{warehouseId}, #{partId}, #{stockQuantity})
    </insert>

</mapper>
